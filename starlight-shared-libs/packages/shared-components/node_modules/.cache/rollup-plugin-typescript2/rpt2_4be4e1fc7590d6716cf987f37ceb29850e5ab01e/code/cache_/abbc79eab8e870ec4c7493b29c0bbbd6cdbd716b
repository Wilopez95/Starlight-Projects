{"code":"import React, { useCallback } from 'react';\r\nimport cx from 'classnames';\r\nimport { Button } from \"../Button/Button\";\r\nimport { Typography } from \"../Typography/Typography\";\r\nimport styles from \"./css/styles.scss\";\r\nexport const ButtonSelect = props => {\r\n    const { items, className, value, onSelectionChange, name, error, noError, label, wrapperClassName, direction = 'row', id = name, } = props;\r\n    const handleChange = useCallback((_, value) => {\r\n        onSelectionChange(name, value);\r\n    }, [name, onSelectionChange]);\r\n    return (React.createElement(\"div\", { className: cx(styles.wrapper, wrapperClassName) },\r\n        label ? (React.createElement(Typography, { color: \"secondary\", variant: \"bodyMedium\", as: \"label\", shade: \"desaturated\", htmlFor: id }, label)) : null,\r\n        React.createElement(\"div\", { className: cx(styles.buttonSelect, styles[direction], className), style: { flexDirection: direction }, \"data-error\": error }, items.map(({ label, value: itemValue }) => {\r\n            return (React.createElement(Button, { ...props, key: itemValue, className: cx(styles.button, {\r\n                    [styles.active]: value === itemValue,\r\n                }), value: itemValue, borderless: true, onClick: handleChange }, label));\r\n        })),\r\n        !noError ? (React.createElement(\"div\", { className: styles.validationText, role: \"alert\" }, error)) : null));\r\n};\r\n//# sourceMappingURL=ButtonSelect.js.map","references":["/Users/wilson/Documents/Starlight/starlight-shared-libs/node_modules/@types/react/index.d.ts","/Users/wilson/Documents/Starlight/starlight-shared-libs/node_modules/classnames/index.d.ts","/Users/wilson/Documents/Starlight/starlight-shared-libs/packages/shared-components/src/common/Button/Button.tsx","/Users/wilson/Documents/Starlight/starlight-shared-libs/packages/shared-components/src/common/Typography/Typography.ts","/Users/wilson/Documents/Starlight/starlight-shared-libs/packages/shared-components/src/common/ButtonSelect/types.ts","/Users/wilson/Documents/Starlight/starlight-shared-libs/packages/shared-components/src/common/ButtonSelect/css/styles.scss.d.ts"],"map":"{\"version\":3,\"file\":\"ButtonSelect.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/common/ButtonSelect/ButtonSelect.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,EAAE,EAAE,WAAW,EAAE,MAAM,OAAO,CAAC;AAC3C,OAAO,EAAE,MAAM,YAAY,CAAC;AAE5B,OAAO,EAAE,MAAM,EAAE,yBAAyB;AAC1C,OAAO,EAAE,UAAU,EAAE,iCAAiC;AAItD,OAAO,MAAM,0BAA0B;AAEvC,MAAM,CAAC,MAAM,YAAY,GAA4B,KAAK,CAAC,EAAE;IAC3D,MAAM,EACJ,KAAK,EACL,SAAS,EACT,KAAK,EACL,iBAAiB,EACjB,IAAI,EACJ,KAAK,EACL,OAAO,EACP,KAAK,EACL,gBAAgB,EAChB,SAAS,GAAG,KAAK,EACjB,EAAE,GAAG,IAAI,GACV,GAAG,KAAK,CAAC;IAEV,MAAM,YAAY,GAAG,WAAW,CAC9B,CAAC,CAAU,EAAE,KAAuB,EAAE,EAAE;QACtC,iBAAiB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACjC,CAAC,EACD,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAC1B,CAAC;IAEF,OAAO,CACL,6BAAK,SAAS,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,EAAE,gBAAgB,CAAC;QACjD,KAAK,CAAC,CAAC,CAAC,CACP,oBAAC,UAAU,IACT,KAAK,EAAC,WAAW,EACjB,OAAO,EAAC,YAAY,EACpB,EAAE,EAAC,OAAO,EACV,KAAK,EAAC,aAAa,EACnB,OAAO,EAAE,EAAE,IAEV,KAAK,CACK,CACd,CAAC,CAAC,CAAC,IAAI;QACR,6BACE,SAAS,EAAE,EAAE,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,EAChE,KAAK,EAAE,EAAE,aAAa,EAAE,SAAS,EAAE,gBACvB,KAAK,IAEhB,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE;YACzC,OAAO,CACL,oBAAC,MAAM,OACD,KAAK,EACT,GAAG,EAAE,SAAS,EACd,SAAS,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE;oBAC3B,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,KAAK,KAAK,SAAS;iBACrC,CAAC,EACF,KAAK,EAAE,SAAS,EAChB,UAAU,QACV,OAAO,EAAE,YAAY,IAEpB,KAAK,CACC,CACV,CAAC;QACJ,CAAC,CAAC,CACE;QACL,CAAC,OAAO,CAAC,CAAC,CAAC,CACV,6BAAK,SAAS,EAAE,MAAM,CAAC,cAAc,EAAE,IAAI,EAAC,OAAO,IAChD,KAAK,CACF,CACP,CAAC,CAAC,CAAC,IAAI,CACJ,CACP,CAAC;AACJ,CAAC,CAAC\"}","dts":{"name":"/Users/wilson/Documents/Starlight/starlight-shared-libs/packages/shared-components/build/common/ButtonSelect/ButtonSelect.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\r\nimport { IButtonSelect } from \"./types\";\r\nexport declare const ButtonSelect: React.FC<IButtonSelect>;\r\n"}}
