import pick from 'lodash/fp/pick.js';
import { DISTRICT_TYPE } from './districtTypes.js';

export const TABLE_NAME = 'subscriptions';

export const getCustomerJobSitePairInputFields = pick([
  'jobSiteId',
  'customerId',
  'alleyPlacement',
  'cabOver',
  'poRequired',
  // 'popupNote',
  'permitRequired',
  'signatureRequired',
]);

export const getNonLinkedInputFields = pick([
  'equipmentType',
  'startDate',
  'endDate',
  'jobSiteContactTextOnly',
  'jobSiteNote',
  'driverInstructions',
  'csrComment',
  'poRequired',
  'purchaseOrderId',
  'bestTimeToComeFrom',
  'bestTimeToComeTo',
  'someoneOnSite',
  'toRoll',
  'highPriority',
  'earlyPick',
  'signatureRequired',
  'alleyPlacement',
  'paymentMethod',
  // It is actually a special case, but here let us consider it non-linked.
  'csrEmail',
  // new tenancy is also a special case
  'businessUnitId',
  'businessLineId',
  'billingCycle',
  'billingType',
  'minBillingPeriods',
  'anniversaryBilling',
  'overrideCreditLimit',
  'unlockOverrides',
  'recurringGrandTotal',
  'periodTo',
  'periodFrom',
]);

export const getLinkedInputFields = pick([
  'jobSiteId',
  'serviceAreaId',
  'customerId',
  // 'projectId',
  'customerJobSiteId',
  'billableServiceId',
  'materialId',
  'globalRatesServicesId',
  'globalRatesRecurringServicesId',
  'customRatesGroupServicesId',
  'customRatesGroupId',
  'jobSiteContactId',
  'permitId',
  'thirdPartyHaulerId',
  'subscriptionContactId',
  // 'materialProfileId',
  // 'disposalSiteId',
  'promoId',
]);

export const subscriptionGridFields = [
  'id',
  'businessUnitId',
  'businessLineId',
  'jobSiteId',
  'status',
  'startDate',
  'endDate',
  'equipmentType',
  'customerId',
  'paymentMethod',
  'grandTotal',
  'billingCycle',
  'billingType',
  'createdAt',
  'updatedAt',
];

export const detailsFields = [
  'id',
  'business_unit_id',
  'business_line_id',
  'customer_job_site_id',
  'custom_rates_group_id',
  'status',
  'service_area_id',
  'job_site_contact_id',
  'subscription_contact_id',
  'purchase_order_id',
  'permit_id',
  'third_party_hauler_id',
  'someone_on_site',
  'driver_instructions',
  'csr_comment',
  'high_priority',
  'best_time_to_come_from',
  'best_time_to_come_to',
  'csr_email',
  'customer_id',
  'job_site_id',
  'start_date',
  'end_date',
  'equipment_type',
  'unlock_overrides',
  'promo_id',
  'payment_method',
  'current_subscription_price',
  'before_taxes_total',
  'grand_total',
  'billing_cycle',
  'billing_type',
  'min_billing_periods',
  'anniversary_billing',
  'next_billing_period_to',
  'next_billing_period_from',
  'created_at',
  'updated_at',
  'reason',
  'reason_description',
  'hold_subscription_until',
  'override_credit_limit',
  'invoiced_date',
  'recurring_grand_total',
];

export const draftSubscriptionDetailsFields = [
  ...detailsFields,
  'jobSiteNote',
  'jobSiteContactTextOnly',
  'poRequired',
  'permitRequired',
  'signatureRequired',
  'alleyPlacement',
  'cabOver',
  'earlyPick',
  'toRoll',
  'competitorId',
  'competitorExpirationDate',
];

export const subscriptionFieldsForOrders = [
  'id',
  'business_unit_id',
  'business_line_id',
  'status',
  'start_date',
  'end_date',
  'driver_instructions',
  'job_site_note',
  'job_site_contact_text_only',
  'best_time_to_come_from',
  'best_time_to_come_to',
  'someone_on_site',
  'high_priority',
  'early_pick',
  'unlock_overrides',
  'job_site_contact_id',
  'third_party_hauler_id',
  'permit_id',
  'promo_id',
  'custom_rates_group_id',
  'subscription_contact_id',
  'purchase_order_id',
  'to_roll',
  'alley_placement',
  'signature_required',
  'billing_type',
  'billing_cycle',
  'anniversary_billing',
  'min_billing_periods',
  'next_billing_period_to',
  'next_billing_period_from',
  'override_credit_limit',
];

export const subscriptionFieldsForInvoicing = [
  'billing_cycle',
  'billing_type',
  'customer_id',
  'id',
  'job_site_id',
  'anniversary_billing',
  'start_date',
  'end_date',
  'next_billing_period_from',
  'next_billing_period_to',
  'business_unit_id',
  'business_line_id',
  'status',
];

export const serviceItemLinkedFieldsForSubscription = [
  'materialId',
  'billableServiceId',
  'globalRatesServicesId',
  'globalRatesRecurringServicesId',
  'customRatesGroupServicesId',
];

export const lineItemLinkedFieldsForSubscription = [
  'billableLineItemId',
  'globalRatesRecurringLineItemsBillingCycleId',
  'customRatesGroupRecurringLineItemBillingCycleId',
];

export const subscriptionOrderLinkedFieldsForSubscription = [
  'billableServiceId',
  'globalRatesServicesId',
  'customRatesGroupServicesId',
];

export const subscriptionNestedFields = [
  'lineItems',
  'subscriptionOrders',
  'customer',
  'jobSite',
  'businessUnit',
];

export const expiredSubsFields = [
  'id',
  'businessUnitId',
  'businessLineId',
  'startDate',
  'endDate',
  'recurentGrandTotal',
  'anniversaryBilling',
  'customRatesGroupId',
  'periodTo',
  'periodFrom',
];

export const districtTypeSortOrder = {
  [DISTRICT_TYPE.primary]: 0,
  [DISTRICT_TYPE.municipal]: 1,
  [DISTRICT_TYPE.secondary]: 2,
};

export const SUBSCRIPTION_FIELDS_FOR_INDEX = [
  'id',
  'businessUnitId',
  'businessLineId',
  'csrEmail',
  'status',
  'jobSiteId',
  'jobSiteAddress',
  'customerId',
  'customerName',
  'startDate',
  'endDate',
  'currentSubscriptionPrice',
  'grandTotal',
  'billingCycle',
  'ratesChanged',
  'serviceFrequencyAggregated',
  'serviceName',
  'nextServiceDate',
  'updatedAt',
  'recurringGrandTotal',
];
