import {
  GraphQLObjectType,
  GraphQLNonNull,
  GraphQLInt,
  GraphQLBoolean,
  GraphQLString,
} from 'graphql';
import { GraphQLDateTime } from 'graphql-scalars';
import { AppDataSource } from '../../data-source';
import { OrderRequests } from '../../database/entities/tenant/OrderRequests';
import { Prices } from '../../database/entities/tenant/Prices';
import { IOrderResolver } from '../../Interfaces/Orders';
import orderRequestType from '../orderRequest/type';
import priceType from '../prices/type';

const orderType: GraphQLObjectType = new GraphQLObjectType({
  name: 'orders',
  description: 'display every orders on the system',
  fields: () => ({
    id: { type: new GraphQLNonNull(GraphQLInt) },
    business_unit_id: { type: new GraphQLNonNull(GraphQLInt) },
    business_line_id: { type: new GraphQLNonNull(GraphQLInt) },
    order_request_id: { type: new GraphQLNonNull(GraphQLInt) },
    orderRequestId: {
      type: orderRequestType,
      resolve: (orderRequest: IOrderResolver) => {
        return AppDataSource.manager.findOneBy(OrderRequests, {
          id: orderRequest.order_request_id,
        });
      },
    },
    draft: { type: new GraphQLNonNull(GraphQLBoolean) },
    is_roll_off: { type: new GraphQLNonNull(GraphQLBoolean) },
    status: { type: new GraphQLNonNull(GraphQLString) },
    service_area_id: { type: GraphQLInt },
    custom_rates_group_id: { type: GraphQLInt },
    job_site_id: { type: new GraphQLNonNull(GraphQLInt) },
    job_site_2_id: { type: GraphQLInt },
    customer_id: { type: new GraphQLNonNull(GraphQLInt) },
    customer_job_site_id: { type: new GraphQLNonNull(GraphQLInt) },
    project_id: { type: GraphQLInt },
    billable_service_id: { type: GraphQLInt },
    material_id: { type: new GraphQLNonNull(GraphQLInt) },
    equipment_item_id: { type: GraphQLInt },
    third_party_hauler_id: { type: GraphQLInt },
    promo_id: { type: GraphQLInt },
    material_profile_id: { type: GraphQLInt },
    global_rates_services_id: { type: new GraphQLNonNull(GraphQLInt) },
    custom_rates_group_services_id: { type: new GraphQLNonNull(GraphQLInt) },
    billable_service_price: { type: new GraphQLNonNull(GraphQLInt) },
    billable_service_total: { type: GraphQLInt },
    billable_line_items_total: { type: GraphQLInt },
    thresholds_total: { type: GraphQLInt },
    before_taxes_total: { type: GraphQLInt },
    on_account_total: { type: new GraphQLNonNull(GraphQLInt) },
    initial_grand_total: { type: GraphQLInt },
    grand_total: { type: GraphQLInt },
    service_date: { type: GraphQLDateTime },
    job_site_contact_id: { type: GraphQLInt },
    job_site_note: { type: new GraphQLNonNull(GraphQLString) },
    call_on_way_phone_number: { type: new GraphQLNonNull(GraphQLString) },
    text_on_way_phone_number: { type: new GraphQLNonNull(GraphQLString) },
    call_on_way_phone_number_id: { type: GraphQLInt },
    text_on_way_phone_number_id: { type: GraphQLInt },
    driver_instructions: { type: GraphQLString },
    permit_id: { type: GraphQLInt },
    best_time_to_come_from: { type: GraphQLString },
    best_time_to_come_to: { type: GraphQLString },
    someone_on_site: { type: new GraphQLNonNull(GraphQLBoolean) },
    to_roll: { type: new GraphQLNonNull(GraphQLBoolean) },
    high_priority: { type: new GraphQLNonNull(GraphQLBoolean) },
    early_pick: { type: new GraphQLNonNull(GraphQLBoolean) },
    alley_placement: { type: new GraphQLNonNull(GraphQLBoolean) },
    cab_over: { type: new GraphQLNonNull(GraphQLBoolean) },
    order_contact_id: { type: GraphQLInt },
    disposal_site_id: { type: GraphQLInt },
    work_order_id: { type: GraphQLInt },
    invoice_notes: { type: GraphQLString },
    cancellation_reason_type: { type: GraphQLString },
    cancellation_comment: { type: GraphQLString },
    unapproved_comment: { type: GraphQLString },
    unfinalized_comment: { type: GraphQLString },
    reschedule_comment: { type: GraphQLString },
    dropped_equipment_item: { type: GraphQLString },
    csr_email: { type: new GraphQLNonNull(GraphQLString) },
    payment_method: { type: GraphQLString },
    invoice_date: { type: GraphQLDateTime },
    notify_day_before: { type: GraphQLString },
    override_credit_limit: { type: new GraphQLNonNull(GraphQLString) },
    created_by: { type: new GraphQLNonNull(GraphQLString) },
    mixed_payment_methods: { type: GraphQLString },
    apply_surcharges: { type: new GraphQLNonNull(GraphQLBoolean) },
    commercial_taxes_used: { type: new GraphQLNonNull(GraphQLBoolean) },
    purchase_order_id: { type: GraphQLInt },
    independent_work_order_id: { type: GraphQLInt },
    price_id: { type: new GraphQLNonNull(GraphQLInt) },
    priceId: {
      type: priceType,
      resolve: (price: IOrderResolver) => {
        return AppDataSource.manager.findOneBy(Prices, {
          id: price.price_id,
        });
      },
    },
    override_service_price: { type: new GraphQLNonNull(GraphQLBoolean) },
    overridden_service_price: { type: GraphQLInt },
    service_total: { type: GraphQLInt },
    invoiced_at: { type: GraphQLDateTime },
    paid_at: { type: GraphQLDateTime },
    billable_service_price_to_display: { type: GraphQLInt },
    billable_service_total_to_display: { type: GraphQLInt },
    billable_line_items_total_to_display: { type: GraphQLInt },
    thresholds_total_to_display: { type: GraphQLInt },
    surcharges_total_to_display: { type: GraphQLInt },
    before_taxes_total_to_display: { type: GraphQLInt },
    on_account_total_to_display: { type: GraphQLInt },
    initial_grand_total_to_display: { type: GraphQLInt },
    grand_total_to_display: { type: GraphQLInt },
    created_at: { type: GraphQLDateTime },
    updated_at: { type: GraphQLDateTime },
    surcharges_total: { type: GraphQLInt },
    origin_district_id: { type: GraphQLInt },
    csr_name: { type: GraphQLString },
  }),
});

export default orderType;
