{"code":"const localeRegexp = {\r\n    'en-US': /^(?:(?:\\+1|1)?(?: |-)?)?(?:\\(([2-9][0-9]{2})\\)|([2-9][0-9]{2}))(?: |-)?([2-9][0-9]{2})(?: |-)?([0-9]{4})$/,\r\n};\r\nconst countryCode = {\r\n    'en-US': '1',\r\n};\r\nexport const formatPhoneNumber = (phoneNumber, locale = 'en-US') => {\r\n    var _a;\r\n    const match = localeRegexp[locale].exec(phoneNumber);\r\n    if (!match) {\r\n        return;\r\n    }\r\n    if (!match[3] || !match[4] || !(match[1] || match[2])) {\r\n        return;\r\n    }\r\n    return `${countryCode[locale]}-${(_a = match[1]) !== null && _a !== void 0 ? _a : match[2]}-${match[3]}-${match[4]}`;\r\n};\r\n//# sourceMappingURL=phoneNumber.js.map","references":["/Users/wilson/Documents/Starlight/starlight-shared-libs/packages/shared-components/src/types/base/index.ts"],"map":"{\"version\":3,\"file\":\"phoneNumber.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/helpers/format/phoneNumber.ts\"],\"names\":[],\"mappings\":\"AAGA,MAAM,YAAY,GAA4B;IAC5C,OAAO,EACL,2GAA2G;CAC9G,CAAC;AAEF,MAAM,WAAW,GAA4B;IAC3C,OAAO,EAAE,GAAG;CACb,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAC/B,WAAmB,EACnB,SAA0B,OAAO,EACb,EAAE;;IACtB,MAAM,KAAK,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAErD,IAAI,CAAC,KAAK,EAAE;QACV,OAAO;KACR;IAED,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;QACrD,OAAO;KACR;IAED,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,MAAA,KAAK,CAAC,CAAC,CAAC,mCAAI,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;AAClF,CAAC,CAAC\"}","dts":{"name":"/Users/wilson/Documents/Starlight/starlight-shared-libs/packages/shared-components/build/helpers/format/phoneNumber.d.ts","writeByteOrderMark":false,"text":"import { SupportedLocale } from \"../../types/base\";\r\nexport declare const formatPhoneNumber: (phoneNumber: string, locale?: SupportedLocale) => string | undefined;\r\n"}}
