"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const graphql_1 = require("graphql");
const graphql_scalars_1 = require("graphql-scalars");
const data_source_1 = require("../../data-source");
const OrderRequests_1 = require("../../database/entities/tenant/OrderRequests");
const Prices_1 = require("../../database/entities/tenant/Prices");
const type_1 = require("../orderRequest/type");
const type_2 = require("../prices/type");
let orderType = new graphql_1.GraphQLObjectType({
    name: "orders",
    description: "display every orders on the system",
    fields: () => ({
        id: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLInt) },
        business_unit_id: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLInt) },
        business_line_id: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLInt) },
        order_request_id: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLInt) },
        orderRequestId: {
            type: type_1.default,
            resolve: (price) => {
                return data_source_1.AppDataSource.manager.findOneBy(OrderRequests_1.OrderRequests, {
                    id: price.order_request_id,
                });
            },
        },
        draft: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLBoolean) },
        is_roll_off: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLBoolean) },
        status: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLString) },
        service_area_id: { type: graphql_1.GraphQLInt },
        custom_rates_group_id: { type: graphql_1.GraphQLInt },
        job_site_id: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLInt) },
        job_site_2_id: { type: graphql_1.GraphQLInt },
        customer_id: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLInt) },
        customer_job_site_id: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLInt) },
        project_id: { type: graphql_1.GraphQLInt },
        billable_service_id: { type: graphql_1.GraphQLInt },
        material_id: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLInt) },
        equipment_item_id: { type: graphql_1.GraphQLInt },
        third_party_hauler_id: { type: graphql_1.GraphQLInt },
        promo_id: { type: graphql_1.GraphQLInt },
        material_profile_id: { type: graphql_1.GraphQLInt },
        global_rates_services_id: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLInt) },
        custom_rates_group_services_id: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLInt) },
        billable_service_price: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLInt) },
        billable_service_total: { type: graphql_1.GraphQLInt },
        billable_line_items_total: { type: graphql_1.GraphQLInt },
        thresholds_total: { type: graphql_1.GraphQLInt },
        before_taxes_total: { type: graphql_1.GraphQLInt },
        on_account_total: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLInt) },
        initial_grand_total: { type: graphql_1.GraphQLInt },
        grand_total: { type: graphql_1.GraphQLInt },
        service_date: { type: graphql_scalars_1.GraphQLDateTime },
        job_site_contact_id: { type: graphql_1.GraphQLInt },
        job_site_note: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLString) },
        call_on_way_phone_number: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLString) },
        text_on_way_phone_number: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLString) },
        call_on_way_phone_number_id: { type: graphql_1.GraphQLInt },
        text_on_way_phone_number_id: { type: graphql_1.GraphQLInt },
        driver_instructions: { type: graphql_1.GraphQLString },
        permit_id: { type: graphql_1.GraphQLInt },
        best_time_to_come_from: { type: graphql_1.GraphQLString },
        best_time_to_come_to: { type: graphql_1.GraphQLString },
        someone_on_site: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLBoolean) },
        to_roll: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLBoolean) },
        high_priority: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLBoolean) },
        early_pick: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLBoolean) },
        alley_placement: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLBoolean) },
        cab_over: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLBoolean) },
        order_contact_id: { type: graphql_1.GraphQLInt },
        disposal_site_id: { type: graphql_1.GraphQLInt },
        work_order_id: { type: graphql_1.GraphQLInt },
        invoice_notes: { type: graphql_1.GraphQLString },
        cancellation_reason_type: { type: graphql_1.GraphQLString },
        cancellation_comment: { type: graphql_1.GraphQLString },
        unapproved_comment: { type: graphql_1.GraphQLString },
        unfinalized_comment: { type: graphql_1.GraphQLString },
        reschedule_comment: { type: graphql_1.GraphQLString },
        dropped_equipment_item: { type: graphql_1.GraphQLString },
        csr_email: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLString) },
        payment_method: { type: graphql_1.GraphQLString },
        invoice_date: { type: graphql_scalars_1.GraphQLDateTime },
        notify_day_before: { type: graphql_1.GraphQLString },
        override_credit_limit: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLString) },
        created_by: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLString) },
        mixed_payment_methods: { type: graphql_1.GraphQLString },
        apply_surcharges: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLBoolean) },
        commercial_taxes_used: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLBoolean) },
        purchase_order_id: { type: graphql_1.GraphQLInt },
        independent_work_order_id: { type: graphql_1.GraphQLInt },
        price_id: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLInt) },
        priceId: {
            type: type_2.default,
            resolve: (price) => {
                return data_source_1.AppDataSource.manager.findOneBy(Prices_1.Prices, {
                    id: price.price_id,
                });
            },
        },
        override_service_price: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLBoolean) },
        overridden_service_price: { type: graphql_1.GraphQLInt },
        service_total: { type: graphql_1.GraphQLInt },
        invoiced_at: { type: graphql_scalars_1.GraphQLDateTime },
        paid_at: { type: graphql_scalars_1.GraphQLDateTime },
        billable_service_price_to_display: { type: graphql_1.GraphQLInt },
        billable_service_total_to_display: { type: graphql_1.GraphQLInt },
        billable_line_items_total_to_display: { type: graphql_1.GraphQLInt },
        thresholds_total_to_display: { type: graphql_1.GraphQLInt },
        surcharges_total_to_display: { type: graphql_1.GraphQLInt },
        before_taxes_total_to_display: { type: graphql_1.GraphQLInt },
        on_account_total_to_display: { type: graphql_1.GraphQLInt },
        initial_grand_total_to_display: { type: graphql_1.GraphQLInt },
        grand_total_to_display: { type: graphql_1.GraphQLInt },
        created_at: { type: graphql_scalars_1.GraphQLDateTime },
        updated_at: { type: graphql_scalars_1.GraphQLDateTime },
        surcharges_total: { type: graphql_1.GraphQLInt },
        origin_district_id: { type: graphql_1.GraphQLInt },
        csr_name: { type: graphql_1.GraphQLString },
    }),
});
exports.default = orderType;
//# sourceMappingURL=types.js.map