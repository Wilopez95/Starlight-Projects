{"code":"export {};\r\n//# sourceMappingURL=types.js.map","references":["/Users/wilson/Documents/Starlight/starlight-shared-libs/node_modules/react-input-mask/index.js","/Users/wilson/Documents/Starlight/starlight-shared-libs/packages/shared-components/src/common/TextInput/types.ts"],"map":"{\"version\":3,\"file\":\"types.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/common/MaskedTextInput/types.ts\"],\"names\":[],\"mappings\":\"\"}","dts":{"name":"/Users/wilson/Documents/Starlight/starlight-shared-libs/packages/shared-components/build/common/MaskedTextInput/types.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nimport { InputState, MaskOptions } from 'react-input-mask';\r\nimport { ITextInput } from \"../TextInput/types\";\r\nexport interface IMaskedTextInput extends ITextInput {\r\n    mask: string | Array<string | RegExp>;\r\n    maskChar?: string | null;\r\n    formatChars?: {\r\n        [key: string]: string;\r\n    };\r\n    alwaysShowMask?: boolean;\r\n    onClick?(e: React.MouseEvent<HTMLInputElement>): void;\r\n    beforeMaskedValueChange?(newState: InputState, oldState: InputState, userInput: string, maskOptions: MaskOptions): InputState;\r\n}\r\n"}}
