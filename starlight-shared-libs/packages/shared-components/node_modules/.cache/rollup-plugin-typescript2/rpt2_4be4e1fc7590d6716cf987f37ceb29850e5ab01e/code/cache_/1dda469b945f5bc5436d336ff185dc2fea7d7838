{"code":"export {};\r\n//# sourceMappingURL=types.js.map","references":["/Users/wilson/Documents/Starlight/starlight-shared-libs/packages/shared-components/src/types/base/index.ts","/Users/wilson/Documents/Starlight/starlight-shared-libs/packages/shared-components/src/common/Button/types.ts"],"map":"{\"version\":3,\"file\":\"types.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/common/ButtonSelect/types.ts\"],\"names\":[],\"mappings\":\"\"}","dts":{"name":"/Users/wilson/Documents/Starlight/starlight-shared-libs/packages/shared-components/build/common/ButtonSelect/types.d.ts","writeByteOrderMark":false,"text":"import { IBaseInput } from \"../../types/base\";\r\nimport { IBaseButton } from \"../Button/types\";\r\ndeclare type Option<L = string, V = string | number> = {\r\n    label: L;\r\n    value: V;\r\n    hint?: L;\r\n};\r\nexport interface IButtonSelectItem {\r\n    name: string;\r\n    value: string;\r\n    label?: string;\r\n}\r\nexport interface IButtonSelect extends IBaseButton<IButtonSelectItem>, IBaseInput<string | number> {\r\n    items: Option[];\r\n    direction?: 'row' | 'column';\r\n    onSelectionChange(path: string, value?: string | number): void;\r\n}\r\nexport {};\r\n"}}
