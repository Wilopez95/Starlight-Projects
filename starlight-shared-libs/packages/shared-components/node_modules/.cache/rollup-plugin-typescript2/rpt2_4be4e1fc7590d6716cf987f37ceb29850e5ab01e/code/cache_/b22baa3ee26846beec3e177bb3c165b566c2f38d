{"code":"export {};\r\n//# sourceMappingURL=types.js.map","references":["/Users/wilson/Documents/Starlight/starlight-shared-libs/node_modules/react-dropzone/typings/react-dropzone.d.ts"],"map":"{\"version\":3,\"file\":\"types.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/common/FileUpload/types.ts\"],\"names\":[],\"mappings\":\"\"}","dts":{"name":"/Users/wilson/Documents/Starlight/starlight-shared-libs/packages/shared-components/build/common/FileUpload/types.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nimport { DropEvent, FileRejection } from 'react-dropzone';\r\nexport interface IFileUpload {\r\n    acceptMimeTypes: string[];\r\n    loading?: boolean;\r\n    error?: boolean;\r\n    isPdf?: boolean;\r\n    allowMultiple?: boolean;\r\n    previewImage?: string | null;\r\n    className?: string;\r\n    placeholder?: React.ReactNode;\r\n    size?: 'large' | 'small';\r\n    onDropAccepted<T extends File>(files: T[], event: DropEvent): void;\r\n    onDropRejected(fileRejections: FileRejection[], event: DropEvent): void;\r\n    onPreviewOpen?(event: React.MouseEvent<HTMLElement>): void;\r\n}\r\nexport interface IFileUploadHandle {\r\n    open(): void;\r\n}\r\n"}}
