"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateSubscriptionOrder = exports.bulkCreateSubscriptionOrder = exports.createSubscriptionOrder = void 0;
const Joi = require("joi");
const number = Joi.number().integer().positive();
const string = Joi.string();
const date = Joi.date();
exports.createSubscriptionOrder = Joi.object()
    .keys({
    billedAt: date.optional(),
    included: Joi.boolean().optional(),
    addTripCharge: Joi.boolean().optional(),
    cancellationReason: string.optional(),
    jobSiteContactId: number.optional(),
    permitId: number.optional().allow(null),
    promoId: number.optional().allow(null),
    thirdPartyHaulerId: number.optional().allow(null),
    earlyPick: Joi.boolean().optional(),
    unlockOverrides: Joi.boolean().optional(),
    workOrdersCount: number.optional(),
    status: string.optional(),
    callOnWayPhoneNumber: string.optional(),
    textOnWayPhoneNumber: string.optional(),
    alleyPlacement: Joi.boolean().optional(),
    toRoll: Joi.boolean().optional(),
    subscriptionContactId: number.optional(),
    signatureRequired: Joi.boolean().optional(),
    canReschedule: Joi.boolean().optional(),
    oneTime: Joi.boolean().optional(),
    instructionsForDriver: string.optional().allow(null),
    jobSiteNote: string.optional().allow(null),
    onejobSiteContactTextOnlytime: Joi.boolean().optional(),
    bestTimeToComeFrom: string.optional().allow(null),
    bestTimeToComeTo: string.optional().allow(null),
    someoneOnSite: Joi.boolean().optional(),
    highPriority: Joi.boolean().optional(),
    hasComments: Joi.boolean().optional().allow(null),
    hasAssignedRoutes: Joi.boolean().optional(),
    startedAt: date.optional(),
    canceledAt: date.optional(),
    completedAt: date.optional(),
    poRequired: Joi.boolean().optional(),
    permitRequired: Joi.boolean().optional(),
    subscriptionServiceItemId: number.required(),
    billableServiceId: number.optional(),
    materialId: number.optional(),
    globalRatesServicesId: number.optional().allow(null),
    customRatesGroupServicesId: number.optional(),
    serviceDate: date.required(),
    price: number.optional().allow(0),
    quantity: number.optional(),
    grandTotal: number.optional().allow(0),
    serviceDayOfWeekRequiredByCustomer: Joi.boolean().optional(),
    assignedRoute: string.optional(),
    billableLineItemsTotal: number.optional(),
    cancellationComment: string.optional(),
    overrideCreditLimit: Joi.boolean().optional(),
    invoicedDate: date.optional(),
    arrivedAt: date.optional(),
    deletedAt: date.optional(),
    customRatesGroupId: number.optional().allow(null),
    destinationJobSiteId: number.optional(),
    subscriptionId: number.required(),
    sequenceId: string.required(),
    purchaseOrderId: number.optional().allow(null),
    applySurcharges: Joi.boolean().optional(),
    isFinalForService: Joi.boolean().optional(),
    // refactor starts here
    surchargesTotal: number.optional(),
    beforeTaxesTotal: number.optional(),
    invoicedAt: date.optional(),
    paidAt: date.optional(),
    priceId: number.optional(),
    priceGroupHistoricalId: number.optional(),
    //end
    createdAt: date.optional(),
    updatedAt: date.optional(),
    invoiceNotes: string.optional(),
    uncompletedComment: string.optional(),
    unapprovedComment: string.optional(),
    unfinalizedComment: string.optional(),
    droppedEquipmentItem: string.optional(),
    pickedUpEquipmentItem: string.optional(),
    weight: number.optional(),
    finishWorkOrderDate: date.optional(),
    weightUnit: string.optional(),
})
    .required();
exports.bulkCreateSubscriptionOrder = Joi.object().keys({
    data: Joi.array().items(exports.createSubscriptionOrder),
});
exports.updateSubscriptionOrder = Joi.object()
    .keys({
    billedAt: date.optional(),
    included: Joi.boolean().optional(),
    addTripCharge: Joi.boolean().optional(),
    cancellationReason: string.optional(),
    jobSiteContactId: number.optional(),
    permitId: number.optional().allow(null),
    promoId: number.optional().allow(null),
    thirdPartyHaulerId: number.optional().allow(null),
    earlyPick: Joi.boolean().optional(),
    unlockOverrides: Joi.boolean().optional(),
    workOrdersCount: number.optional(),
    status: string.optional(),
    callOnWayPhoneNumber: string.optional().allow(null),
    textOnWayPhoneNumber: string.optional().allow(null),
    alleyPlacement: Joi.boolean().optional(),
    toRoll: Joi.boolean().optional(),
    subscriptionContactId: number.optional(),
    signatureRequired: Joi.boolean().optional(),
    canReschedule: Joi.boolean().optional(),
    oneTime: Joi.boolean().optional(),
    instructionsForDriver: string.optional().allow(null),
    jobSiteNote: string.optional().allow(null),
    onejobSiteContactTextOnlytime: Joi.boolean().optional(),
    bestTimeToComeFrom: string.optional().allow(null),
    bestTimeToComeTo: string.optional().allow(null),
    someoneOnSite: Joi.boolean().optional(),
    highPriority: Joi.boolean().optional(),
    hasComments: Joi.boolean().optional(),
    hasAssignedRoutes: Joi.boolean().optional(),
    startedAt: date.optional(),
    canceledAt: date.optional(),
    completedAt: date.optional(),
    poRequired: Joi.boolean().optional(),
    permitRequired: Joi.boolean().optional(),
    subscriptionServiceItemId: number.optional(),
    billableServiceId: number.optional(),
    materialId: number.optional(),
    globalRatesServicesId: number.optional().allow(null),
    customRatesGroupServicesId: number.optional().allow(null),
    serviceDate: date.optional(),
    price: number.optional().allow(0),
    quantity: number.optional(),
    grandTotal: number.optional().allow(0),
    serviceDayOfWeekRequiredByCustomer: Joi.boolean().optional(),
    assignedRoute: string.optional().allow(null),
    billableLineItemsTotal: number.optional().allow(0),
    cancellationComment: string.optional().allow(null),
    overrideCreditLimit: Joi.boolean().optional(),
    invoicedDate: date.optional(),
    arrivedAt: date.optional(),
    deletedAt: date.optional(),
    customRatesGroupId: number.optional().allow(null),
    destinationJobSiteId: number.optional(),
    subscriptionId: number.optional(),
    sequenceId: string.optional(),
    purchaseOrderId: number.optional().allow(null),
    applySurcharges: Joi.boolean().optional(),
    isFinalForService: Joi.boolean().optional(),
    // refactor starts here
    surchargesTotal: number.optional(),
    beforeTaxesTotal: number.optional(),
    invoicedAt: date.optional(),
    paidAt: date.optional(),
    priceId: number.optional(),
    priceGroupHistoricalId: number.optional(),
    //end
    createdAt: date.optional(),
    updatedAt: date.optional(),
    invoiceNotes: string.optional().allow(null),
    uncompletedComment: string.optional().allow(""),
    unapprovedComment: string.optional().allow(""),
    unfinalizedComment: string.optional().allow(""),
    droppedEquipmentItem: string.optional().allow(null),
    pickedUpEquipmentItem: string.optional().allow(null),
    weight: number.optional().allow(null).allow(null),
    finishWorkOrderDate: date.optional().allow(null),
    weightUnit: string.optional().allow(null),
})
    .required();
//# sourceMappingURL=validate.js.map