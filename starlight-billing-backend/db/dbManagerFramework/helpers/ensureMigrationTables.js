const ensureMigrationTables = async (
  knex,
  { internalSchema, tenantMigrationTable, migrationTable, tenantTable },
) => {
  await knex.raw(`create schema if not exists ??`, [internalSchema]);
  await Promise.all([
    knex.raw(
      `
            create table if not exists ??.?? (
                id integer generated by default as identity
                    primary key,
                name text not null unique,
                batch integer not null,
                started_at timestamp with time zone
                    not null default current_timestamp
            )
        `,
      [internalSchema, migrationTable],
    ),
    knex.raw(
      `
            create table if not exists ??.?? (
                id integer generated by default as identity
                    primary key,
                name text not null,
                tenant text not null,
                batch integer not null,
                started_at timestamp with time zone
                    not null default current_timestamp,
                unique (name, tenant)
            )
        `,
      [internalSchema, tenantMigrationTable],
    ),
    knex.raw(
      `
            create table if not exists ??.?? (
                id integer generated by default as identity
                    primary key,
                name text not null unique,
                legal_name text not null,
                created_at timestamp with time zone not null
                    default current_timestamp,
                updated_at timestamp with time zone not null
                    default current_timestamp
            )
        `,
      [internalSchema, tenantTable],
    ),
  ]);
};

export default ensureMigrationTables;
