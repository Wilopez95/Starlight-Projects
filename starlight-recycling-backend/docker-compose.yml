version: '3.8'
services:
  redis:
    hostname: recycling-redis
    image: redis:alpine
    ports:
      - '${REDIS_PORT:-6379}:6379'
    networks:
      - local-backend
  rabbitmq:
    hostname: recycling-rabbit
    container_name: recycling-rabbit
    image: rabbitmq:3-management-alpine
    ports:
      - '${RABBIT_PORT_1:-5672}:5672'
      - '${RABBIT_PORT_2:-15672}:15672'
      - '${RABBIT_PORT_UI:-8080}:8080'
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    networks:
      - local-backend

  postgres:
    hostname: recycling-postgres
    container_name: recycling-postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-starlight}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-starlight}
      POSTGRES_DB: ${POSTGRES_DB:-starlight}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - '${TYPEORM_PORT:-5432}:5432'
    restart: unless-stopped
    networks:
      - local-backend

  elasticsearch:
    hostname: recycling-elasticsearch
    container_name: recycling-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - http.publish_host=localhost
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - '${ELASTICSEARCH_PORT:-9200}:9200'
    networks:
      - local-backend

  kibana:
    container_name: recycling-kibana
    image: docker.elastic.co/kibana/kibana:7.9.0
    #    environment:
    #      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - '${KIBANA_PORT:-5601}:5601'
    networks:
      - local-backend

networks:
  local-backend:
    name: recycling-network

volumes:
  postgres:
  pgadmin:
  esdata:
    driver: local
