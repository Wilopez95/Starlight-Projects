{"code":"import { addDays } from 'date-fns';\r\nexport const calculateDueDate = (terms) => {\r\n    const date = new Date();\r\n    switch (terms) {\r\n        case 'cod':\r\n            return date;\r\n        case 'net15Days':\r\n            return addDays(date, 15);\r\n        case 'net30Days':\r\n            return addDays(date, 30);\r\n        case 'net60Days':\r\n            return addDays(date, 60);\r\n    }\r\n};\r\nexport const getPaymentTermsDisplayString = (terms) => {\r\n    switch (terms) {\r\n        case 'cod':\r\n            return 'COD';\r\n        case 'net15Days':\r\n            return 'Net 15';\r\n        case 'net30Days':\r\n            return 'Net 30';\r\n        case 'net60Days':\r\n            return 'Net 60';\r\n    }\r\n};\r\n","references":["/Users/wilson/Documents/Starlight/starlight-shared-libs/node_modules/date-fns/typings.d.ts","/Users/wilson/Documents/Starlight/starlight-shared-libs/packages/invoice-builder/src/types.ts"],"dts":{"name":"/Users/wilson/Documents/Starlight/starlight-shared-libs/packages/invoice-builder/build/components/builders/SubscriptionInvoiceBuilder/helpers.d.ts","writeByteOrderMark":false,"text":"import type { PaymentTerms } from '../../../types';\r\nexport declare const calculateDueDate: (terms: PaymentTerms) => Date;\r\nexport declare const getPaymentTermsDisplayString: (terms: PaymentTerms) => string;\r\n"}}
