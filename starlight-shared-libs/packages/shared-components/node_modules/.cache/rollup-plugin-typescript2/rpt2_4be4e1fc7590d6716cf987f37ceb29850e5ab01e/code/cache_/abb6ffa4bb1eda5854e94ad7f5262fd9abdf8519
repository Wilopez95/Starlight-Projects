{"code":"export {};\r\n//# sourceMappingURL=types.js.map","references":["/Users/wilson/Documents/Starlight/starlight-shared-libs/node_modules/@types/react/index.d.ts","/Users/wilson/Documents/Starlight/starlight-shared-libs/node_modules/react-currency-input-field/dist/components/CurrencyInputProps.d.ts","/Users/wilson/Documents/Starlight/starlight-shared-libs/packages/shared-components/src/common/Typography/types.ts"],"map":"{\"version\":3,\"file\":\"types.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/common/CurrencyInputField/types.ts\"],\"names\":[],\"mappings\":\"\"}","dts":{"name":"/Users/wilson/Documents/Starlight/starlight-shared-libs/packages/shared-components/build/common/CurrencyInputField/types.d.ts","writeByteOrderMark":false,"text":"import { ReactNode } from 'react';\r\nimport { CurrencyInputOnChangeValues, IntlConfig } from 'react-currency-input-field/dist/components/CurrencyInputProps';\r\nimport { TextAlign } from \"../Typography/types\";\r\nexport interface ICurrencyInputField {\r\n    name: string;\r\n    id?: string;\r\n    label?: ReactNode;\r\n    error?: string | boolean | object | Error | undefined;\r\n    errorAlign?: TextAlign;\r\n    textAlign?: TextAlign | string;\r\n    noError?: boolean;\r\n    disabled?: boolean;\r\n    readOnly?: boolean;\r\n    wrapClassName?: string;\r\n    value: string | number | readonly string[] | undefined;\r\n    placeholder?: string;\r\n    ariaLabel?: string;\r\n    type?: 'text' | 'number';\r\n    limits?: {\r\n        min?: number;\r\n        max?: number;\r\n    };\r\n    lengthLimits?: {\r\n        min?: number;\r\n        max?: number;\r\n    };\r\n    className?: string;\r\n    inputContainerClassName?: string;\r\n    half?: boolean;\r\n    countable?: boolean;\r\n    borderError?: boolean;\r\n    reverse?: boolean;\r\n    fixedLength?: number;\r\n    confirmed?: boolean;\r\n    onClearError?(): void;\r\n    prefix?: string;\r\n    allowDecimals?: boolean;\r\n    allowNegativeValue?: boolean;\r\n    defaultValue?: number;\r\n    decimalSeparator?: string;\r\n    decimalsLimit?: number;\r\n    decimalScale?: number;\r\n    groupSeparator?: string;\r\n    fixedDecimalLength?: number;\r\n    onValueChange?: (value: string | undefined, name?: string, values?: CurrencyInputOnChangeValues) => void;\r\n    onChange?: (e: any) => void;\r\n    onClearError?: () => void;\r\n    suffix?: string;\r\n    intlConfig?: IntlConfig;\r\n    groupSeperator?: string;\r\n    step?: number;\r\n    maxLength?: number;\r\n    children: ReactNode;\r\n}\r\n"}}
