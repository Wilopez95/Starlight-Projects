"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateRecurrentOrderTemplateHistorical = exports.createRecurrentOrderTemplateHistorical = void 0;
const Joi = require("joi");
const number = Joi.number().integer().positive();
const string = Joi.string();
const date = Joi.date();
const boolean = Joi.boolean();
exports.createRecurrentOrderTemplateHistorical = Joi.object()
    .keys({
    originalId: number.required(),
    eventType: string.required(),
    userId: string.required(),
    traceId: string.required(),
    createdAt: date.optional(),
    updatedAt: date.optional(),
    businessLineId: number.required(),
    businessUnitId: number.required(),
    status: string.required(),
    serviceAreaId: number.optional(),
    jobSiteId: number.required(),
    customerId: number.required(),
    customerJobSiteId: number.required(),
    projectId: number.optional(),
    thirdPartyHaulerId: number.optional(),
    promoId: number.optional(),
    materialProfileId: number.optional(),
    jobSiteContactId: number.optional(),
    orderContactId: number.optional(),
    permitId: number.optional(),
    disposalSiteId: number.optional(),
    customRatesGroupId: number.optional(),
    globalRatesServicesId: number.required(),
    customRatesGroupServicesId: number.optional(),
    billableServiceId: number.optional(),
    materialId: number.optional(),
    equipmentItemId: number.optional(),
    billableServicePrice: number.required(),
    billableServiceQuantity: number.required(),
    billableServiceTotal: number.required(),
    billableLineItemsTotal: number.required(),
    thresholdsTotal: number.required(),
    frequencyType: string.required(),
    frequencyPeriod: number.optional(),
    customFrequencyType: string.optional(),
    frequencyDays: number.optional(),
    syncDate: date.optional(),
    nextServiceDate: date.optional(),
    unlockOverrides: boolean.required(),
    beforeTaxesTotal: number.required(),
    grandTotal: number.required(),
    startDate: date.required(),
    endDate: date.optional(),
    jobSiteNote: string.optional(),
    callOnWayPhoneNumber: string.optional(),
    textOnWayPhoneNumber: string.optional(),
    callOnWayPhoneNumberId: number.optional(),
    textOnWayPhoneNumberId: number.optional(),
    driverInstructions: string.optional(),
    bestTimeToComeFrom: string.optional(),
    bestTimeToComeTo: string.optional(),
    someoneOnSite: boolean.required(),
    toRoll: boolean.required(),
    highPriority: boolean.required(),
    earlyPick: boolean.required(),
    invoiceNotes: string.optional(),
    csrEmail: string.required(),
    alleyPlacement: boolean.optional(),
    cabOver: boolean.optional(),
    signatureRequired: boolean.optional(),
    paymentMethod: string.required(),
    notifyDayBefore: string.optional(),
    applySurcharges: boolean.required(),
    billableServiceApplySurcharges: boolean.required(),
    surchargesTotal: number.optional(),
    commercialTaxesUsed: boolean.required(),
    purchaseOrderId: number.optional(),
    onHoldEmailSent: boolean.required(),
    onHoldNotifySalesRep: boolean.required(),
    onHoldNotifyMainContact: boolean.required(),
    // refactor starts here
    priceGroupId: number.required(),
    priceId: number.required(),
    //end
    lastFailureDate: date.optional(),
})
    .required();
exports.updateRecurrentOrderTemplateHistorical = Joi.object()
    .keys({
    originalId: number.optional(),
    eventType: string.optional(),
    userId: string.optional(),
    traceId: string.optional(),
    createdAt: date.optional(),
    updatedAt: date.optional(),
    businessLineId: number.optional(),
    businessUnitId: number.optional(),
    status: string.optional(),
    serviceAreaId: number.optional(),
    jobSiteId: number.optional(),
    customerId: number.optional(),
    customerJobSiteId: number.optional(),
    projectId: number.optional(),
    thirdPartyHaulerId: number.optional(),
    promoId: number.optional(),
    materialProfileId: number.optional(),
    jobSiteContactId: number.optional(),
    orderContactId: number.optional(),
    permitId: number.optional(),
    disposalSiteId: number.optional(),
    customRatesGroupId: number.optional(),
    globalRatesServicesId: number.optional(),
    customRatesGroupServicesId: number.optional(),
    billableServiceId: number.optional(),
    materialId: number.optional(),
    equipmentItemId: number.optional(),
    billableServicePrice: number.optional(),
    billableServiceQuantity: number.optional(),
    billableServiceTotal: number.optional(),
    billableLineItemsTotal: number.optional(),
    thresholdsTotal: number.optional(),
    frequencyType: string.optional(),
    frequencyPeriod: number.optional(),
    customFrequencyType: string.optional(),
    frequencyDays: number.optional(),
    syncDate: date.optional(),
    nextServiceDate: date.optional(),
    unlockOverrides: boolean.optional(),
    beforeTaxesTotal: number.optional(),
    grandTotal: number.optional(),
    startDate: date.optional(),
    endDate: date.optional(),
    jobSiteNote: string.optional(),
    callOnWayPhoneNumber: string.optional(),
    textOnWayPhoneNumber: string.optional(),
    callOnWayPhoneNumberId: number.optional(),
    textOnWayPhoneNumberId: number.optional(),
    driverInstructions: string.optional(),
    bestTimeToComeFrom: string.optional(),
    bestTimeToComeTo: string.optional(),
    someoneOnSite: boolean.optional(),
    toRoll: boolean.optional(),
    highPriority: boolean.optional(),
    earlyPick: boolean.optional(),
    invoiceNotes: string.optional(),
    csrEmail: string.optional(),
    alleyPlacement: boolean.optional(),
    cabOver: boolean.optional(),
    signatureRequired: boolean.optional(),
    paymentMethod: string.optional(),
    notifyDayBefore: string.optional(),
    applySurcharges: boolean.optional(),
    billableServiceApplySurcharges: boolean.optional(),
    surchargesTotal: number.optional(),
    commercialTaxesUsed: boolean.optional(),
    purchaseOrderId: number.optional(),
    onHoldEmailSent: boolean.optional(),
    onHoldNotifySalesRep: boolean.optional(),
    onHoldNotifyMainContact: boolean.optional(),
    // refactor starts here
    priceGroupId: number.optional(),
    priceId: number.optional(),
    // end
    lastFailureDate: date.optional(),
})
    .required();
//# sourceMappingURL=validate.js.map