{"code":"export {};\r\n//# sourceMappingURL=types.js.map","references":["/Users/wilson/Documents/Starlight/starlight-shared-libs/packages/shared-components/src/theme/baseTypes/index.ts","/Users/wilson/Documents/Starlight/starlight-shared-libs/packages/shared-components/src/types/base/index.ts"],"map":"{\"version\":3,\"file\":\"types.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/common/Button/types.ts\"],\"names\":[],\"mappings\":\"\"}","dts":{"name":"/Users/wilson/Documents/Starlight/starlight-shared-libs/packages/shared-components/build/common/Button/types.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nimport { Colors } from \"../../theme/baseTypes\";\r\nimport { SvgComponent } from \"../../types/base\";\r\nexport interface IButton extends IBaseButton<string | number> {\r\n    buttonRef?: React.Ref<HTMLButtonElement>;\r\n    loading?: boolean;\r\n}\r\nexport declare type ButtonVariant = Colors | 'conversePrimary' | 'converseSuccess' | 'converseInformation' | 'converseAlert' | 'none';\r\nexport declare type ButtonType = 'submit' | 'reset' | 'button';\r\nexport declare type ButtonSize = 'medium' | 'large';\r\nexport interface IBaseButton<T> {\r\n    type?: ButtonType;\r\n    iconLeft?: SvgComponent;\r\n    iconRight?: SvgComponent;\r\n    variant?: ButtonVariant;\r\n    size?: ButtonSize;\r\n    value?: number | string;\r\n    children?: T | React.ReactNode;\r\n    className?: string;\r\n    disabled?: boolean;\r\n    to?: string;\r\n    full?: boolean;\r\n    borderless?: boolean;\r\n    onClick?(e: React.MouseEvent<HTMLButtonElement, MouseEvent>, value?: number | string): void;\r\n}\r\n"}}
