import * as Joi from 'joi';
const positiveInt = Joi.number().integer().positive();
const string = Joi.string();
const date = Joi.date();
const boolean = Joi.boolean();

export const createRecurrentOrderTemplateHistorical = Joi.object()
  .keys({
    originalId: positiveInt.required(),
    eventType: string.required(),
    userId: string.required(),
    traceId: string.required(),
    createdAt: date.optional(),
    updatedAt: date.optional(),
    businessLineId: positiveInt.required(),
    businessUnitId: positiveInt.required(),
    status: string.required(),
    serviceAreaId: positiveInt.optional(),
    jobSiteId: positiveInt.required(),
    customerId: positiveInt.required(),
    customerJobSiteId: positiveInt.required(),
    projectId: positiveInt.optional(),
    thirdPartyHaulerId: positiveInt.optional(),
    promoId: positiveInt.optional(),
    materialProfileId: positiveInt.optional(),
    jobSiteContactId: positiveInt.optional(),
    orderContactId: positiveInt.optional(),
    permitId: positiveInt.optional(),
    disposalSiteId: positiveInt.optional(),
    customRatesGroupId: positiveInt.optional(),
    globalRatesServicesId: positiveInt.required(),
    customRatesGroupServicesId: positiveInt.optional(),
    billableServiceId: positiveInt.optional(),
    materialId: positiveInt.optional(),
    equipmentItemId: positiveInt.optional(),
    billableServicePrice: Joi.number().required(),
    billableServiceQuantity: positiveInt.required(),
    billableServiceTotal: Joi.number().required(),
    billableLineItemsTotal: Joi.number().required(),
    thresholdsTotal: Joi.number().required(),
    frequencyType: string.required(),
    frequencyPeriod: positiveInt.optional(),
    customFrequencyType: string.optional(),
    frequencyDays: positiveInt.optional(),
    syncDate: date.optional(),
    nextServiceDate: date.optional(),
    unlockOverrides: boolean.required(),
    beforeTaxesTotal: Joi.number().required(),
    grandTotal: Joi.number().required(),
    startDate: date.required(),
    endDate: date.optional(),
    jobSiteNote: string.optional(),
    callOnWayPhoneNumber: string.optional(),
    textOnWayPhoneNumber: string.optional(),
    callOnWayPhoneNumberId: Joi.number().optional(),
    textOnWayPhoneNumberId: Joi.number().optional(),
    driverInstructions: string.optional(),
    bestTimeToComeFrom: string.optional(),
    bestTimeToComeTo: string.optional(),
    someoneOnSite: boolean.required(),
    toRoll: boolean.required(),
    highPriority: boolean.required(),
    earlyPick: boolean.required(),
    invoiceNotes: string.optional(),
    csrEmail: string.required(),
    alleyPlacement: boolean.optional(),
    cabOver: boolean.optional(),
    signatureRequired: boolean.optional(),
    paymentMethod: string.required(),
    notifyDayBefore: string.optional(),
    applySurcharges: boolean.required(),
    billableServiceApplySurcharges: boolean.required(),
    surchargesTotal: Joi.number().optional(),
    commercialTaxesUsed: boolean.required(),
    purchaseOrderId: positiveInt.optional(),
    onHoldEmailSent: boolean.required(),
    onHoldNotifySalesRep: boolean.required(),
    onHoldNotifyMainContact: boolean.required(),

    // refactor starts here
    priceGroupId: positiveInt.required(),
    priceId: positiveInt.required(),
    //end

    lastFailureDate: date.optional(),
  })
  .required();

export const updateRecurrentOrderTemplateHistorical = Joi.object()
  .keys({
    originalId: positiveInt.optional(),
    eventType: string.optional(),
    userId: string.optional(),
    traceId: string.optional(),
    createdAt: date.optional(),
    updatedAt: date.optional(),
    businessLineId: positiveInt.optional(),
    businessUnitId: positiveInt.optional(),
    status: string.optional(),
    serviceAreaId: positiveInt.optional(),
    jobSiteId: positiveInt.optional(),
    customerId: positiveInt.optional(),
    customerJobSiteId: positiveInt.optional(),
    projectId: positiveInt.optional(),
    thirdPartyHaulerId: positiveInt.optional(),
    promoId: positiveInt.optional(),
    materialProfileId: positiveInt.optional(),
    jobSiteContactId: positiveInt.optional(),
    orderContactId: positiveInt.optional(),
    permitId: positiveInt.optional(),
    disposalSiteId: positiveInt.optional(),
    customRatesGroupId: positiveInt.optional(),
    globalRatesServicesId: positiveInt.optional(),
    customRatesGroupServicesId: positiveInt.optional(),
    billableServiceId: positiveInt.optional(),
    materialId: positiveInt.optional(),
    equipmentItemId: positiveInt.optional(),
    billableServicePrice: Joi.number().optional(),
    billableServiceQuantity: positiveInt.optional(),
    billableServiceTotal: Joi.number().optional(),
    billableLineItemsTotal: Joi.number().optional(),
    thresholdsTotal: Joi.number().optional(),
    frequencyType: string.optional(),
    frequencyPeriod: positiveInt.optional(),
    customFrequencyType: string.optional(),
    frequencyDays: positiveInt.optional(),
    syncDate: date.optional(),
    nextServiceDate: date.optional(),
    unlockOverrides: boolean.optional(),
    beforeTaxesTotal: Joi.number().optional(),
    grandTotal: Joi.number().optional(),
    startDate: date.optional(),
    endDate: date.optional(),
    jobSiteNote: string.optional(),
    callOnWayPhoneNumber: string.optional(),
    textOnWayPhoneNumber: string.optional(),
    callOnWayPhoneNumberId: Joi.number().optional(),
    textOnWayPhoneNumberId: Joi.number().optional(),
    driverInstructions: string.optional(),
    bestTimeToComeFrom: string.optional(),
    bestTimeToComeTo: string.optional(),
    someoneOnSite: boolean.optional(),
    toRoll: boolean.optional(),
    highPriority: boolean.optional(),
    earlyPick: boolean.optional(),
    invoiceNotes: string.optional(),
    csrEmail: string.optional(),
    alleyPlacement: boolean.optional(),
    cabOver: boolean.optional(),
    signatureRequired: boolean.optional(),
    paymentMethod: string.optional(),
    notifyDayBefore: string.optional(),
    applySurcharges: boolean.optional(),
    billableServiceApplySurcharges: boolean.optional(),
    surchargesTotal: Joi.number().optional(),
    commercialTaxesUsed: boolean.optional(),
    purchaseOrderId: positiveInt.optional(),
    onHoldEmailSent: boolean.optional(),
    onHoldNotifySalesRep: boolean.optional(),
    onHoldNotifyMainContact: boolean.optional(),

    // refactor starts here
    priceGroupId: positiveInt.optional(),
    priceId: positiveInt.optional(),
    // end

    lastFailureDate: date.optional(),
  })
  .required();
